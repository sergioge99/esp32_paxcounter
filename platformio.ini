; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[board]
halfile = ttgov2.h

[platformio]
default_envs = usb
description = Paxcounter is a device for metering passenger flows in realtime. It counts how many mobile devices are around.

[common]
release_version = 2.4.0
debug_level = 3
extra_scripts = pre:build.py
otakeyfile = ota.conf
lorakeyfile = loraconf.h
lmicconfigfile = lmic_config.h
platform_espressif32 = espressif32@3.2.0
monitor_speed = 115200
upload_speed = 115200
display_library = 
lib_deps_lora = 
	mcci-catena/MCCI LoRaWAN LMIC library @ ^3.3.0
lib_deps_display = 
	bitbank2/OneBitDisplay @ 1.9.0
	bitbank2/BitBang_I2C @ ^2.1.3
	ricmoo/QRCode @ ^0.0.1
	bodmer/TFT_eSPI @ ^2.3.51
lib_deps_ledmatrix = 
	seeed-studio/Ultrathin_LED_Matrix @ ^1.0.0
lib_deps_rgbled = 
	roboticsbrno/SmartLeds @ ^1.2.1
lib_deps_gps = 
	mikalhart/TinyGPSPlus @ ^1.0.2
lib_deps_sensors = 
	adafruit/Adafruit Unified Sensor @ ^1.1.4
	adafruit/Adafruit BME280 Library @ ^2.1.1
	adafruit/Adafruit BMP085 Library @ ^1.1.0
	boschsensortec/BSEC Software Library @ 1.6.1480
	https://github.com/ricki-z/SDS011.git
lib_deps_basic = 
	https://github.com/SukkoPera/Arduino-Rokkit-Hash.git
	bblanchon/ArduinoJson @ ^6
	jchristensen/Timezone @ ^1.2.4
	makuna/RTC @ ^2.3.5
	spacehuhn/SimpleButton
	lewisxhe/AXP202X_Library @ ^1.1.3
	geeksville/esp32-micro-sdcard @ ^0.1.1
	256dpi/MQTT @ ^2.4.7
lib_deps_all = 
	${common.lib_deps_basic}
	${common.lib_deps_lora}
	${common.lib_deps_display}
	${common.lib_deps_rgbled}
	${common.lib_deps_gps}
	${common.lib_deps_sensors}
	${common.lib_deps_ledmatrix}
build_flags_basic = 
	-include "src/hal/${board.halfile}"
	-include "src/paxcounter.conf"
	'-DCORE_DEBUG_LEVEL=${common.debug_level}'
	'-DLOG_LOCAL_LEVEL=${common.debug_level}'
	'-DPROGVERSION="${common.release_version}"'
	'-Wno-unknown-pragmas'
	'-Wno-unused-variable'
build_flags_sensors = 
	-Llib/Bosch-BSEC/src/esp32/
	-lalgobsec
build_flags_all = 
	${common.build_flags_basic}
	${common.build_flags_sensors}
	-mfix-esp32-psram-cache-issue

[env]
lib_ldf_mode = deep
framework = arduino
board = esp32dev
board_build.partitions = min_spiffs.csv
upload_speed = ${common.upload_speed}
platform = ${common.platform_espressif32}
lib_deps = ${common.lib_deps_all}
build_flags = ${common.build_flags_all}
upload_protocol = ${common.upload_protocol}
extra_scripts = ${common.extra_scripts}
monitor_speed = ${common.monitor_speed}
monitor_filters = 
	time
	esp32_exception_decoder
	default

[env:ota]
upload_protocol = custom

[env:usb]
upload_protocol = esptool

[env:dev]
upload_protocol = esptool
build_type = debug
platform = https://github.com/platformio/platform-espressif32.git#develop
